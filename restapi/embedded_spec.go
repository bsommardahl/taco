// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The SDR management interface",
    "title": "Stanford Digital Repository",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "3.0.0"
  },
  "host": "sdr.dlss.stanford.edu",
  "basePath": "/v1",
  "paths": {
    "/resource": {
      "put": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "tags": [
          "work"
        ],
        "summary": "Update an existing work",
        "operationId": "updateWork",
        "parameters": [
          {
            "description": "Pet object that needs to be added to the store",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Work"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Work not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "work"
        ],
        "summary": "Add a new work",
        "operationId": "addWork",
        "parameters": [
          {
            "description": "Work object that needs to be added",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Work"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/resource/{id}": {
      "get": {
        "description": "Returns a single work",
        "produces": [
          "application/json"
        ],
        "tags": [
          "work"
        ],
        "summary": "Find work by ID",
        "operationId": "findWorkById",
        "parameters": [
          {
            "type": "string",
            "description": "ID of pet to return",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Work"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Work": {
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "oo000oo0001"
        },
        "status": {
          "description": "lifecycle status",
          "type": "string",
          "enum": [
            "registered",
            "published"
          ]
        },
        "title": {
          "type": "string",
          "example": "My work"
        }
      }
    }
  },
  "tags": [
    {
      "description": "A sdr managed object",
      "name": "work"
    }
  ]
}`))
}
